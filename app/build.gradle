plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'

}


android {

    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion


    defaultConfig {
        applicationId rootProject.ext.applicationId
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode appVersionCode
        versionName appVersionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }




    signingConfigs {
        config{
            keyAlias rootProject.ext.keyAlias
            keyPassword rootProject.ext.keyPassword
            storeFile file(rootProject.ext.storeFile)
            storePassword rootProject.ext.storePassword
        }
    }

    buildTypes {

        release {
            signingConfig signingConfigs.config
            //混淆编译
            minifyEnabled true
            //移除无用资源
            shrinkResources true
            //压缩
            zipAlignEnabled true
            //正式版不打印日志
            buildConfigField("boolean", "LOG_DEBUG", "false")
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            //调用签名
            signingConfig signingConfigs.config

        }

        debug {
            signingConfig signingConfigs.config
            buildConfigField("boolean", "LOG_DEBUG", "true")
        }

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }

//    resourcePrefix "${project.name}_"

      //自定义输出apk名
    applicationVariants.all{
        variant ->
            variant.outputs.all {
                if (variant.getBuildType().getName() == 'release') {
                    outputFileName = new File("app" + "_v" + variant.versionName + "_code" + variant.versionCode + "_" + releaseDate() + "_" + variant.getBuildType().getName() + ".apk")
                }
            }
    }
}

def static releaseDate(){
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}



dependencies {
    api  project(':module_base_gallery')
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.media:media:1.1.0'
    kapt "com.alibaba:arouter-compiler:$rootProject.arouterVersion"

    // Kotlin + coroutines
    implementation("androidx.work:work-runtime-ktx:2.7.1")

    implementation 'org.greenrobot:eventbus:3.1.1'
}